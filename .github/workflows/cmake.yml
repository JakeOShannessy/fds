on: [push, pull_request]

name: CMake Build

jobs:
  build:
    name: build ${{ matrix.os }} - openmp=${{ matrix.openmp }} - mkl=${{ matrix.mkl }} - ${{ matrix.compiler }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        compiler:
          - gcc
          - intel
        openmp:
          - on
          - off
        mkl:
          # - on
          - off
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Add intel apt repo
        if: ${{ matrix.compiler }} == 'intel'
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
          sudo apt-get update
      - name: Install prerequisites
        if: ${{ matrix.compiler }} == 'intel'
        run: sudo apt-get install -y intel-basekit intel-hpckit
      - name: Set compiler (${{ matrix.compiler }})
        if: ${{ matrix.compiler }} == 'intel'
        shell: bash
        run: |
          echo "FC=mpiifort" >> $GITHUB_ENV
      - name: Set compiler (${{ matrix.compiler }})
        if: ${{ matrix.compiler }} == 'gcc'
        shell: bash
        run: |
          echo "FC=mpifort" >> $GITHUB_ENV
      - name: Build (${{ matrix.compiler }})
        run: |
          source /opt/intel/oneapi/setvars.sh || true
          cmake -B ${{github.workspace}}/cbuild -S .
          cmake --build ${{github.workspace}}/cbuild
      - name: Test
        shell: bash
        working-directory: ${{github.workspace}}/cbuild
        run: |
          source /opt/intel/oneapi/setvars.sh || true
          ctest -j10 --output-on-failure
